{"ast":null,"code":"var _jsxFileName = \"/Users/sherydubey/spe_major_project/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport Header from '../components/Header'; //import Footer from '../components/Footer'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/shop/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: \"Profile Updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorOrders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          className: \"table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TOTAL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DELIVERED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.totalPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: 'red'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: 'red'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                  to: `/shop/order/${order._id}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-sm\",\n                    variant: \"light\",\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileScreen, \"9quhFhFzn8KplZntngatT6Ghq5o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/sherydubey/spe_major_project/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Table","Form","Button","Row","Col","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","USER_UPDATE_PROFILE_RESET","Header","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","type","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport Header from '../components/Header'\n//import Footer from '../components/Footer'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/shop/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <>\n    <Header />\n    <br/>\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/shop/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n    \n    </>\n  )\n}\n\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}