{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sherydubey/spe_major_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"/Users/sherydubey/spe_major_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sherydubey/spe_major_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject;import React from'react';import styled from'styled-components';import{motion}from'framer-motion';//import axios\nimport axios from'axios';import{year_2021}from'../api';//import react-chartjs-2\nimport{Bar}from'react-chartjs-2';//garbage code\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Stats=function Stats(){var statsData=[];var getStatsData=function getStatsData(){var countries_code=['IN','CN','US','RU','JP','GF','KZ'];/*\r\n    for(let i=11;i<21;i++){\r\n        let oneYearData = [];\r\n        countries_code.forEach(async (country) => {\r\n            //console.log(country);\r\n            let outputData = await axios.get(`${year_otherthan_2021(i,country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`);\r\n            //oneYearData.push(country,outputData.data.total);\r\n            let element= {};\r\n            element[country]= outputData.data.total;\r\n            oneYearData.push(element);\r\n            await new Promise(r => setInterval(r, 1000));\r\n        });\r\n        statsData.push(oneYearData);\r\n        //oneYearData = [];\r\n    }\r\n    */ //const year2021 = [];\nvar element={};countries_code.forEach(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var outputData2021;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(year_2021(country),\"&key=\").concat(process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY));case 2:outputData2021=_context.sent;element[country]=outputData2021.data.total;//year2021.push(country, outputData2021.data.total);\nnew Promise(function(r){return setInterval(r,1000);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());//statsData.push(year2021);\nstatsData.push(element);//console.log(statsData);\nconsole.log(element);//console.log(statsData[0]);\n//setInterval(function(){alert(\"Hello\")},3000);\n};//calling function getStatsData\n//getStatsData();\nsetTimeout(getStatsData,10000);//create stats dashboard\nvar data={labels:[\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"],datasets:[{label:\"Arianespace\",backgroundColor:\"#000000\",data:[7,10,7,11,12,11,11,11,9,7,0]},{label:\"China\",backgroundColor:\"#191919\",data:[18,19,15,16,20,22,18,39,34,39,7]},{label:\"India\",backgroundColor:\"#323232\",data:[3,2,3,4,5,7,5,7,6,2,1]},{label:\"Japan\",backgroundColor:\"#4c4c4c\",data:[3,2,3,4,4,4,7,6,2,4,0]},{label:\"Kazakhstan\",backgroundColor:\"#666666\",data:[23,21,23,20,17,11,13,9,13,7,3]},{label:\"Russia\",backgroundColor:\"#7f7f7f\",data:[7,3,9,11,8,6,6,8,9,8,2]},{label:\"United States\",backgroundColor:\"#999999\",data:[17,13,19,23,19,22,29,33,25,40,15]}]};//options\nvar optionsApplied={scales:{yAxes:[{stacked:true}],xAxes:[{stacked:true,ticks:{maxRotation:90,minRotation:90}}]}};return/*#__PURE__*/_jsxs(Charts,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\" Launch Record For Various Countries \"}),/*#__PURE__*/_jsx(\"div\",{className:\"histogram\",children:/*#__PURE__*/_jsx(Bar,{data:data,options:optionsApplied,width:100,height:40})})]});};//styled\nvar Charts=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    max-height: 85vh;\\n    padding: 0rem 3rem;\\n    h4{\\n        padding: .75rem;\\n        text-align: center;\\n        font-size: 1.20rem;\\n    }\\n    @media (max-width: 1000px){\\n            padding-top: 5rem;\\n            h4{\\n                padding: 2rem;\\n            } \\n        }\\n\"])));export default Stats;","map":{"version":3,"sources":["/Users/sherydubey/spe_major_project/frontend/src/pages/Stats.js"],"names":["React","styled","motion","axios","year_2021","Bar","Stats","statsData","getStatsData","countries_code","element","forEach","country","get","process","env","REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY","outputData2021","data","total","Promise","r","setInterval","push","console","log","setTimeout","labels","datasets","label","backgroundColor","optionsApplied","scales","yAxes","stacked","xAxes","ticks","maxRotation","minRotation","Charts","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled  from 'styled-components';\r\nimport {motion} from 'framer-motion';\r\n//import axios\r\nimport axios from 'axios';\r\nimport {year_2021} from '../api';\r\n//import react-chartjs-2\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n//garbage code\r\n\r\n\r\n\r\nconst Stats = () => {\r\n    const statsData = [];\r\n    const getStatsData = () => {\r\n    const countries_code = ['IN','CN','US','RU','JP','GF','KZ'];\r\n    /*\r\n    for(let i=11;i<21;i++){\r\n        let oneYearData = [];\r\n        countries_code.forEach(async (country) => {\r\n            //console.log(country);\r\n            let outputData = await axios.get(`${year_otherthan_2021(i,country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`);\r\n            //oneYearData.push(country,outputData.data.total);\r\n            let element= {};\r\n            element[country]= outputData.data.total;\r\n            oneYearData.push(element);\r\n            await new Promise(r => setInterval(r, 1000));\r\n        });\r\n        statsData.push(oneYearData);\r\n        //oneYearData = [];\r\n    }\r\n    */\r\n    //const year2021 = [];\r\n    let element= {};\r\n    countries_code.forEach(async (country) => {\r\n        let outputData2021 = await axios.get(`${year_2021(country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`)\r\n        element[country]= outputData2021.data.total;\r\n        //year2021.push(country, outputData2021.data.total);\r\n        new Promise(r => setInterval(r, 1000));\r\n    });\r\n    //statsData.push(year2021);\r\n    statsData.push(element)\r\n    //console.log(statsData);\r\n    console.log(element);\r\n    //console.log(statsData[0]);\r\n    //setInterval(function(){alert(\"Hello\")},3000);\r\n}\r\n    //calling function getStatsData\r\n    //getStatsData();\r\n    setTimeout(getStatsData,10000);\r\n    //create stats dashboard\r\n    \r\n    const data = {\r\n        labels: [\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\r\n                \"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"],\r\n        datasets: [\r\n            {\r\n                label: \"Arianespace\",\r\n                backgroundColor: \"#000000\",\r\n                data: [7,10,7,11,12,11,11,11,9,7,0]\r\n            },\r\n            {\r\n                label: \"China\",\r\n                backgroundColor: \"#191919\",\r\n                data: [18,19,15,16,20,22,18,39,34,39,7]\r\n            },   \r\n           {\r\n                label: \"India\",\r\n                backgroundColor: \"#323232\",\r\n                data: [3,2,3,4,5,7,5,7,6,2,1]\r\n           },\r\n           {\r\n                label: \"Japan\",\r\n                backgroundColor: \"#4c4c4c\",\r\n                data: [3,2,3,4,4,4,7,6,2,4,0]\r\n           }, \r\n           {\r\n                label: \"Kazakhstan\",\r\n                backgroundColor: \"#666666\",\r\n                data: [23,21,23,20,17,11,13,9,13,7,3]\r\n           }, \r\n           {\r\n                label: \"Russia\",\r\n                backgroundColor: \"#7f7f7f\",\r\n                data: [7,3,9,11,8,6,6,8,9,8,2]\r\n           }, \r\n           {\r\n                label: \"United States\",\r\n                backgroundColor: \"#999999\",\r\n                data: [17,13,19,23,19,22,29,33,25,40,15]\r\n           },\r\n          \r\n        ]\r\n      };\r\n      \r\n\r\n    //options\r\n    const optionsApplied = {\r\n        scales: {\r\n            yAxes: [{ stacked: true }],\r\n            xAxes: [\r\n            {\r\n                stacked: true,\r\n                ticks: { maxRotation: 90, minRotation: 90 },\r\n            }\r\n            ]\r\n        }\r\n    };\r\n    \r\n    return(\r\n        <Charts>\r\n            <h4> Launch Record For Various Countries </h4>\r\n            <div className='histogram'>\r\n            <Bar\r\n                data={data}\r\n                options= {optionsApplied}\r\n                width={100}\r\n                height={40}\r\n            />\r\n            </div>\r\n            {/*<TweetIt />*/}\r\n        </Charts> \r\n    );\r\n}\r\n\r\n//styled\r\nconst Charts = styled(motion.div)`\r\n    max-height: 85vh;\r\n    padding: 0rem 3rem;\r\n    h4{\r\n        padding: .75rem;\r\n        text-align: center;\r\n        font-size: 1.20rem;\r\n    }\r\n    @media (max-width: 1000px){\r\n            padding-top: 5rem;\r\n            h4{\r\n                padding: 2rem;\r\n            } \r\n        }\r\n`\r\n\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}