{"ast":null,"code":"var _jsxFileName = \"/Users/sherydubey/spe_major_project/frontend/src/pages/Stats.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion'; //import axios\n\nimport axios from 'axios';\nimport { year_2021 } from '../api'; //import react-chartjs-2\n\nimport { Bar } from 'react-chartjs-2'; //garbage code\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stats = () => {\n  const statsData = [];\n\n  const getStatsData = () => {\n    const countries_code = ['IN', 'CN', 'US', 'RU', 'JP', 'GF', 'KZ'];\n    /*\r\n    for(let i=11;i<21;i++){\r\n        let oneYearData = [];\r\n        countries_code.forEach(async (country) => {\r\n            //console.log(country);\r\n            let outputData = await axios.get(`${year_otherthan_2021(i,country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`);\r\n            //oneYearData.push(country,outputData.data.total);\r\n            let element= {};\r\n            element[country]= outputData.data.total;\r\n            oneYearData.push(element);\r\n            await new Promise(r => setInterval(r, 1000));\r\n        });\r\n        statsData.push(oneYearData);\r\n        //oneYearData = [];\r\n    }\r\n    */\n    //const year2021 = [];\n\n    let element = {};\n    countries_code.forEach(async country => {\n      let outputData2021 = await axios.get(`${year_2021(country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`);\n      element[country] = outputData2021.data.total; //year2021.push(country, outputData2021.data.total);\n\n      new Promise(r => setInterval(r, 1000));\n    }); //statsData.push(year2021);\n\n    statsData.push(element); //console.log(statsData);\n\n    console.log(element); //console.log(statsData[0]);\n    //setInterval(function(){alert(\"Hello\")},3000);\n  }; //calling function getStatsData\n  //getStatsData();\n\n\n  setTimeout(getStatsData, 10000); //create stats dashboard\n\n  const data = {\n    labels: [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\"],\n    datasets: [{\n      label: \"Arianespace\",\n      backgroundColor: \"#000000\",\n      data: [7, 10, 7, 11, 12, 11, 11, 11, 9, 7, 0]\n    }, {\n      label: \"China\",\n      backgroundColor: \"#191919\",\n      data: [18, 19, 15, 16, 20, 22, 18, 39, 34, 39, 7]\n    }, {\n      label: \"India\",\n      backgroundColor: \"#323232\",\n      data: [3, 2, 3, 4, 5, 7, 5, 7, 6, 2, 1]\n    }, {\n      label: \"Japan\",\n      backgroundColor: \"#4c4c4c\",\n      data: [3, 2, 3, 4, 4, 4, 7, 6, 2, 4, 0]\n    }, {\n      label: \"Kazakhstan\",\n      backgroundColor: \"#666666\",\n      data: [23, 21, 23, 20, 17, 11, 13, 9, 13, 7, 3]\n    }, {\n      label: \"Russia\",\n      backgroundColor: \"#7f7f7f\",\n      data: [7, 3, 9, 11, 8, 6, 6, 8, 9, 8, 2]\n    }, {\n      label: \"United States\",\n      backgroundColor: \"#999999\",\n      data: [17, 13, 19, 23, 19, 22, 29, 33, 25, 40, 15]\n    }]\n  }; //options\n\n  const optionsApplied = {\n    scales: {\n      yAxes: [{\n        stacked: true\n      }],\n      xAxes: [{\n        stacked: true,\n        ticks: {\n          maxRotation: 90,\n          minRotation: 90\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Charts, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Launch Record For Various Countries \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"histogram\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: optionsApplied,\n        width: 100,\n        height: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}; //styled\n\n\n_c = Stats;\nconst Charts = styled(motion.div)`\n    max-height: 85vh;\n    padding: 0rem 3rem;\n    h4{\n        padding: .75rem;\n        text-align: center;\n        font-size: 1.20rem;\n    }\n    @media (max-width: 1000px){\n            padding-top: 5rem;\n            h4{\n                padding: 2rem;\n            } \n        }\n`;\n_c2 = Charts;\nexport default Stats;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Stats\");\n$RefreshReg$(_c2, \"Charts\");","map":{"version":3,"sources":["/Users/sherydubey/spe_major_project/frontend/src/pages/Stats.js"],"names":["React","styled","motion","axios","year_2021","Bar","Stats","statsData","getStatsData","countries_code","element","forEach","country","outputData2021","get","process","env","REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY","data","total","Promise","r","setInterval","push","console","log","setTimeout","labels","datasets","label","backgroundColor","optionsApplied","scales","yAxes","stacked","xAxes","ticks","maxRotation","minRotation","Charts","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled  from 'styled-components';\r\nimport {motion} from 'framer-motion';\r\n//import axios\r\nimport axios from 'axios';\r\nimport {year_2021} from '../api';\r\n//import react-chartjs-2\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n//garbage code\r\n\r\n\r\n\r\nconst Stats = () => {\r\n    const statsData = [];\r\n    const getStatsData = () => {\r\n    const countries_code = ['IN','CN','US','RU','JP','GF','KZ'];\r\n    /*\r\n    for(let i=11;i<21;i++){\r\n        let oneYearData = [];\r\n        countries_code.forEach(async (country) => {\r\n            //console.log(country);\r\n            let outputData = await axios.get(`${year_otherthan_2021(i,country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`);\r\n            //oneYearData.push(country,outputData.data.total);\r\n            let element= {};\r\n            element[country]= outputData.data.total;\r\n            oneYearData.push(element);\r\n            await new Promise(r => setInterval(r, 1000));\r\n        });\r\n        statsData.push(oneYearData);\r\n        //oneYearData = [];\r\n    }\r\n    */\r\n    //const year2021 = [];\r\n    let element= {};\r\n    countries_code.forEach(async (country) => {\r\n        let outputData2021 = await axios.get(`${year_2021(country)}&key=${process.env.REACT_APP_ROCKET_LAUNCH_LIVE_API_KEY}`)\r\n        element[country]= outputData2021.data.total;\r\n        //year2021.push(country, outputData2021.data.total);\r\n        new Promise(r => setInterval(r, 1000));\r\n    });\r\n    //statsData.push(year2021);\r\n    statsData.push(element)\r\n    //console.log(statsData);\r\n    console.log(element);\r\n    //console.log(statsData[0]);\r\n    //setInterval(function(){alert(\"Hello\")},3000);\r\n}\r\n    //calling function getStatsData\r\n    //getStatsData();\r\n    setTimeout(getStatsData,10000);\r\n    //create stats dashboard\r\n    \r\n    const data = {\r\n        labels: [\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\r\n                \"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"],\r\n        datasets: [\r\n            {\r\n                label: \"Arianespace\",\r\n                backgroundColor: \"#000000\",\r\n                data: [7,10,7,11,12,11,11,11,9,7,0]\r\n            },\r\n            {\r\n                label: \"China\",\r\n                backgroundColor: \"#191919\",\r\n                data: [18,19,15,16,20,22,18,39,34,39,7]\r\n            },   \r\n           {\r\n                label: \"India\",\r\n                backgroundColor: \"#323232\",\r\n                data: [3,2,3,4,5,7,5,7,6,2,1]\r\n           },\r\n           {\r\n                label: \"Japan\",\r\n                backgroundColor: \"#4c4c4c\",\r\n                data: [3,2,3,4,4,4,7,6,2,4,0]\r\n           }, \r\n           {\r\n                label: \"Kazakhstan\",\r\n                backgroundColor: \"#666666\",\r\n                data: [23,21,23,20,17,11,13,9,13,7,3]\r\n           }, \r\n           {\r\n                label: \"Russia\",\r\n                backgroundColor: \"#7f7f7f\",\r\n                data: [7,3,9,11,8,6,6,8,9,8,2]\r\n           }, \r\n           {\r\n                label: \"United States\",\r\n                backgroundColor: \"#999999\",\r\n                data: [17,13,19,23,19,22,29,33,25,40,15]\r\n           },\r\n          \r\n        ]\r\n      };\r\n      \r\n\r\n    //options\r\n    const optionsApplied = {\r\n        scales: {\r\n            yAxes: [{ stacked: true }],\r\n            xAxes: [\r\n            {\r\n                stacked: true,\r\n                ticks: { maxRotation: 90, minRotation: 90 },\r\n            }\r\n            ]\r\n        }\r\n    };\r\n    \r\n    return(\r\n        <Charts>\r\n            <h4> Launch Record For Various Countries </h4>\r\n            <div className='histogram'>\r\n            <Bar\r\n                data={data}\r\n                options= {optionsApplied}\r\n                width={100}\r\n                height={40}\r\n            />\r\n            </div>\r\n            {/*<TweetIt />*/}\r\n        </Charts> \r\n    );\r\n}\r\n\r\n//styled\r\nconst Charts = styled(motion.div)`\r\n    max-height: 85vh;\r\n    padding: 0rem 3rem;\r\n    h4{\r\n        padding: .75rem;\r\n        text-align: center;\r\n        font-size: 1.20rem;\r\n    }\r\n    @media (max-width: 1000px){\r\n            padding-top: 5rem;\r\n            h4{\r\n                padding: 2rem;\r\n            } \r\n        }\r\n`\r\n\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}