{"ast":null,"code":"//Get current date\nconst getCurrentMonth = () => {\n  const month = new Date().getMonth() + 1;\n\n  if (month < 10) {\n    return `0${month}`;\n  } else {\n    return month;\n  }\n};\n\nconst getCurrentDay = () => {\n  const day = new Date().getDate();\n\n  if (day < 10) {\n    return `0${day}`;\n  } else {\n    return day;\n  }\n};\n\nconst currentYear = new Date().getFullYear();\nconst currentDay = getCurrentDay();\nconst currentMonth = getCurrentMonth();\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`; //console.log(currentDate);\n//Get previous month date\n\n/*\r\nconst getPreviousMonthDate = () => {\r\n    const previousYear = new Date().getFullYear();\r\n    const previousMonth = new Date().getMonth() + 1;\r\n    const previousDay = getCurrentDay();\r\n    if (previousMonth === 1){\r\n        return  `${previousYear -1}-12-${previousDay}`;\r\n    }\r\n    else if (previousMonth < 11){\r\n        return  `${previousYear}-0${previousMonth - 1}-${previousDay}`;\r\n        \r\n    }\r\n    else {\r\n        return  `${previousYear}-${previousMonth - 1}-${previousDay}`;\r\n    }\r\n}\r\n\r\nconst previousMonthDate = getPreviousMonthDate();\r\n//console.log(previousMonthDate);\r\n*/\n\nlet previousMonthDate = new Date();\npreviousMonthDate.setDate(previousMonthDate.getDate() - 60);\nconst previousMonthDateString = previousMonthDate.toISOString().split('T')[0];\nconsole.log(previousMonthDateString); //tomorrow date\n\nconst tomorrow = new Date();\ntomorrow.setDate(new Date().getDate() + 1);\nconst tomorrowDate = tomorrow.toJSON().toString().slice(0, 10);\nconsole.log(tomorrowDate); // get current datetime\n//const nowDateTime = new Date();\n//console.log(nowDateTime);\n//URLs without key\n//Launches\n//Upcoming launches\n\nexport const upcoming_launch_url = () => `https://fdo.rocketlaunch.live/json/launches?`; //Recent launches\n\nexport const recent_launch_reversing_required_url = () => `https://fdo.rocketlaunch.live/json/launches?before_date=${tomorrowDate}&after_date=${previousMonthDateString}`; //LaunchDetail\n\nexport const launch_detail_url = launchId => `https://fdo.rocketlaunch.live/json/launches?id=${launchId}`; //Searched item \n\nexport const searched_url1 = text => `https://fdo.rocketlaunch.live/json/launches?before_date=${tomorrowDate}&search=${text}`;\nexport const searched_url2 = text => `https://fdo.rocketlaunch.live/json/launches?after_date=${currentDate}&search=${text}`; //Stats\n//for year 2021\n\nexport const year_2021 = country_code => `https://fdo.rocketlaunch.live/json/launches?before_date=${currentDate}&after_date=2020-12-31&country_code=${country_code}`; //for year other years\n\nexport const year_otherthan_2021 = (for_year, country_code) => `https://fdo.rocketlaunch.live/json/launches?before_date=20${for_year + 1}-01-01&after_date=20${for_year - 1}-12-31&country_code=${country_code}`;","map":{"version":3,"sources":["/Users/sherydubey/spe_major_project/frontend/src/api.js"],"names":["getCurrentMonth","month","Date","getMonth","getCurrentDay","day","getDate","currentYear","getFullYear","currentDay","currentMonth","currentDate","previousMonthDate","setDate","previousMonthDateString","toISOString","split","console","log","tomorrow","tomorrowDate","toJSON","toString","slice","upcoming_launch_url","recent_launch_reversing_required_url","launch_detail_url","launchId","searched_url1","text","searched_url2","year_2021","country_code","year_otherthan_2021","for_year"],"mappings":"AAAA;AACA,MAAMA,eAAe,GAAG,MAAM;AAC1B,QAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,KAAwB,CAAtC;;AACA,MAAIF,KAAK,GAAG,EAAZ,EAAe;AACX,WAAQ,IAAGA,KAAM,EAAjB;AACH,GAFD,MAGI;AACA,WAAOA,KAAP;AACH;AACJ,CARD;;AAUA,MAAMG,aAAa,GAAG,MAAM;AACxB,QAAMC,GAAG,GAAG,IAAIH,IAAJ,GAAWI,OAAX,EAAZ;;AACA,MAAID,GAAG,GAAG,EAAV,EAAa;AACT,WAAQ,IAAGA,GAAI,EAAf;AACH,GAFD,MAGI;AACA,WAAOA,GAAP;AACH;AACJ,CARD;;AAUA,MAAME,WAAW,GAAG,IAAIL,IAAJ,GAAWM,WAAX,EAApB;AACA,MAAMC,UAAU,GAAGL,aAAa,EAAhC;AACA,MAAMM,YAAY,GAAGV,eAAe,EAApC;AACA,MAAMW,WAAW,GAAI,GAAEJ,WAAY,IAAGG,YAAa,IAAGD,UAAW,EAAjE,C,CACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIG,iBAAiB,GAAG,IAAIV,IAAJ,EAAxB;AACAU,iBAAiB,CAACC,OAAlB,CAA0BD,iBAAiB,CAACN,OAAlB,KAA8B,EAAxD;AACA,MAAMQ,uBAAuB,GAAGF,iBAAiB,CAACG,WAAlB,GAAgCC,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAhC;AACAC,OAAO,CAACC,GAAR,CAAYJ,uBAAZ,E,CAEA;;AACA,MAAMK,QAAQ,GAAG,IAAIjB,IAAJ,EAAjB;AACAiB,QAAQ,CAACN,OAAT,CAAiB,IAAIX,IAAJ,GAAWI,OAAX,KAAuB,CAAxC;AACA,MAAMc,YAAY,GAAGD,QAAQ,CAACE,MAAT,GAAkBC,QAAlB,GAA6BC,KAA7B,CAAmC,CAAnC,EAAqC,EAArC,CAArB;AACAN,OAAO,CAACC,GAAR,CAAYE,YAAZ,E,CAEA;AACA;AACA;AAEA;AAEA;AACA;;AACA,OAAO,MAAMI,mBAAmB,GAAG,MAAO,8CAAnC,C,CACP;;AACA,OAAO,MAAMC,oCAAoC,GAAG,MAAO,2DAA0DL,YAAa,eAAcN,uBAAwB,EAAjK,C,CACP;;AACA,OAAO,MAAMY,iBAAiB,GAAIC,QAAD,IAAe,kDAAiDA,QAAS,EAAnG,C,CACP;;AACA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAW,2DAA0DT,YAAa,WAAUS,IAAK,EAAvH;AACP,OAAO,MAAMC,aAAa,GAAID,IAAD,IAAW,0DAAyDlB,WAAY,WAAUkB,IAAK,EAArH,C,CAGP;AACA;;AACA,OAAO,MAAME,SAAS,GAAIC,YAAD,IAAmB,2DAA0DrB,WAAY,uCAAsCqB,YAAa,EAA9J,C,CACP;;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWF,YAAX,KAA6B,6DAA4DE,QAAQ,GAAG,CAAE,uBAAsBA,QAAQ,GAAG,CAAE,uBAAsBF,YAAa,EAAxM","sourcesContent":["//Get current date\r\nconst getCurrentMonth = () => {\r\n    const month = new Date().getMonth() + 1;\r\n    if (month < 10){\r\n        return `0${month}`;\r\n    }\r\n    else{\r\n        return month;\r\n    }\r\n}\r\n\r\nconst getCurrentDay = () => {\r\n    const day = new Date().getDate();\r\n    if (day < 10){\r\n        return `0${day}`;\r\n    }\r\n    else{\r\n        return day;\r\n    }\r\n}\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst currentDay = getCurrentDay();\r\nconst currentMonth = getCurrentMonth();\r\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\n//console.log(currentDate);\r\n\r\n//Get previous month date\r\n/*\r\nconst getPreviousMonthDate = () => {\r\n    const previousYear = new Date().getFullYear();\r\n    const previousMonth = new Date().getMonth() + 1;\r\n    const previousDay = getCurrentDay();\r\n    if (previousMonth === 1){\r\n        return  `${previousYear -1}-12-${previousDay}`;\r\n    }\r\n    else if (previousMonth < 11){\r\n        return  `${previousYear}-0${previousMonth - 1}-${previousDay}`;\r\n        \r\n    }\r\n    else {\r\n        return  `${previousYear}-${previousMonth - 1}-${previousDay}`;\r\n    }\r\n}\r\n\r\nconst previousMonthDate = getPreviousMonthDate();\r\n//console.log(previousMonthDate);\r\n*/\r\n\r\nlet previousMonthDate = new Date();\r\npreviousMonthDate.setDate(previousMonthDate.getDate() - 60);\r\nconst previousMonthDateString = previousMonthDate.toISOString().split('T')[0];\r\nconsole.log(previousMonthDateString);\r\n\r\n//tomorrow date\r\nconst tomorrow = new Date();\r\ntomorrow.setDate(new Date().getDate() + 1);\r\nconst tomorrowDate = tomorrow.toJSON().toString().slice(0,10);\r\nconsole.log(tomorrowDate);\r\n\r\n// get current datetime\r\n//const nowDateTime = new Date();\r\n//console.log(nowDateTime);\r\n\r\n//URLs without key\r\n\r\n//Launches\r\n//Upcoming launches\r\nexport const upcoming_launch_url = () => `https://fdo.rocketlaunch.live/json/launches?`;\r\n//Recent launches\r\nexport const recent_launch_reversing_required_url = () => `https://fdo.rocketlaunch.live/json/launches?before_date=${tomorrowDate}&after_date=${previousMonthDateString}`;\r\n//LaunchDetail\r\nexport const launch_detail_url = (launchId) => `https://fdo.rocketlaunch.live/json/launches?id=${launchId}`;  \r\n//Searched item \r\nexport const searched_url1 = (text) => `https://fdo.rocketlaunch.live/json/launches?before_date=${tomorrowDate}&search=${text}`; \r\nexport const searched_url2 = (text) => `https://fdo.rocketlaunch.live/json/launches?after_date=${currentDate}&search=${text}`;\r\n\r\n\r\n//Stats\r\n//for year 2021\r\nexport const year_2021 = (country_code) => `https://fdo.rocketlaunch.live/json/launches?before_date=${currentDate}&after_date=2020-12-31&country_code=${country_code}`;\r\n//for year other years\r\nexport const year_otherthan_2021 = (for_year, country_code) => `https://fdo.rocketlaunch.live/json/launches?before_date=20${for_year + 1}-01-01&after_date=20${for_year - 1}-12-31&country_code=${country_code}`;"]},"metadata":{},"sourceType":"module"}