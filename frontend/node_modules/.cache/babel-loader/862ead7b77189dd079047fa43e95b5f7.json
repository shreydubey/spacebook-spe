{"ast":null,"code":"'use strict';\n\nvar format = require('quick-format-unescaped');\n\nmodule.exports = pino;\n\nvar _console = pfGlobalThisOrFallback().console || {};\n\nvar stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue\n};\n\nfunction shouldSerialize(serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    var hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err';\n    });\n    return hasToFilter;\n  } else if (serialize === true) {\n    return Object.keys(serializers);\n  }\n\n  return false;\n}\n\nfunction pino(opts) {\n  opts = opts || {};\n  opts.browser = opts.browser || {};\n  var transmit = opts.browser.transmit;\n\n  if (transmit && typeof transmit.send !== 'function') {\n    throw Error('pino: transmit option must have a send function');\n  }\n\n  var proto = opts.browser.write || _console;\n  if (opts.browser.write) opts.browser.asObject = true;\n  var serializers = opts.serializers || {};\n  var serialize = shouldSerialize(opts.browser.serialize, serializers);\n  var stdErrSerialize = opts.browser.serialize;\n  if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf('!stdSerializers.err') > -1) stdErrSerialize = false;\n  var levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'];\n\n  if (typeof proto === 'function') {\n    proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;\n  }\n\n  if (opts.enabled === false) opts.level = 'silent';\n  var level = opts.level || 'info';\n  var logger = Object.create(proto);\n  if (!logger.log) logger.log = noop;\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  });\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  });\n  var setOpts = {\n    transmit: transmit,\n    serialize: serialize,\n    asObject: opts.browser.asObject,\n    levels: levels,\n    timestamp: getTimeFunction(opts)\n  };\n  logger.levels = pino.levels;\n  logger.level = level;\n  logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;\n  logger.serializers = serializers;\n  logger._serialize = serialize;\n  logger._stdErrSerialize = stdErrSerialize;\n  logger.child = child;\n  if (transmit) logger._logEvent = createLogEventShape();\n\n  function getLevelVal() {\n    return this.level === 'silent' ? Infinity : this.levels.values[this.level];\n  }\n\n  function getLevel() {\n    return this._level;\n  }\n\n  function setLevel(level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level);\n    }\n\n    this._level = level;\n    set(setOpts, logger, 'error', 'log'); // <-- must stay first\n\n    set(setOpts, logger, 'fatal', 'error');\n    set(setOpts, logger, 'warn', 'error');\n    set(setOpts, logger, 'info', 'log');\n    set(setOpts, logger, 'debug', 'log');\n    set(setOpts, logger, 'trace', 'log');\n  }\n\n  function child(bindings) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino');\n    }\n\n    var bindingsSerializers = bindings.serializers;\n\n    if (serialize && bindingsSerializers) {\n      var childSerializers = Object.assign({}, serializers, bindingsSerializers);\n      var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;\n      delete bindings.serializers;\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);\n    }\n\n    function Child(parent) {\n      this._childLevel = (parent._childLevel | 0) + 1;\n      this.error = bind(parent, bindings, 'error');\n      this.fatal = bind(parent, bindings, 'fatal');\n      this.warn = bind(parent, bindings, 'warn');\n      this.info = bind(parent, bindings, 'info');\n      this.debug = bind(parent, bindings, 'debug');\n      this.trace = bind(parent, bindings, 'trace');\n\n      if (childSerializers) {\n        this.serializers = childSerializers;\n        this._serialize = childSerialize;\n      }\n\n      if (transmit) {\n        this._logEvent = createLogEventShape([].concat(parent._logEvent.bindings, bindings));\n      }\n    }\n\n    Child.prototype = this;\n    return new Child(this);\n  }\n\n  return logger;\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n};\npino.stdSerializers = stdSerializers;\npino.stdTimeFunctions = Object.assign({}, {\n  nullTime: nullTime,\n  epochTime: epochTime,\n  unixTime: unixTime,\n  isoTime: isoTime\n});\n\nfunction set(opts, logger, level, fallback) {\n  var proto = Object.getPrototypeOf(logger);\n  logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;\n  wrap(opts, logger, level);\n}\n\nfunction wrap(opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return;\n\n  logger[level] = function (write) {\n    return function LOG() {\n      var ts = opts.timestamp();\n      var args = new Array(arguments.length);\n      var proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;\n\n      for (var i = 0; i < args.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);\n      }\n\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts));else write.apply(proto, args);\n\n      if (opts.transmit) {\n        var transmitLevel = opts.transmit.level || logger.level;\n        var transmitValue = pino.levels.values[transmitLevel];\n        var methodValue = pino.levels.values[level];\n        if (methodValue < transmitValue) return;\n        transmit(this, {\n          ts: ts,\n          methodLevel: level,\n          methodValue: methodValue,\n          transmitLevel: transmitLevel,\n          transmitValue: pino.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args);\n      }\n    };\n  }(logger[level]);\n}\n\nfunction asObject(logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);\n  var argsCloned = args.slice();\n  var msg = argsCloned[0];\n  var o = {};\n\n  if (ts) {\n    o.time = ts;\n  }\n\n  o.level = pino.levels.values[level];\n  var lvl = (logger._childLevel | 0) + 1;\n  if (lvl < 1) lvl = 1; // deliberate, catching objects, arrays\n\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift());\n    }\n\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined;\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned);\n\n  if (msg !== undefined) o.msg = msg;\n  return o;\n}\n\nfunction applySerializers(args, serialize, serializers, stdErrSerialize) {\n  for (var i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i]);\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (var k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k]);\n        }\n      }\n    }\n  }\n}\n\nfunction bind(parent, bindings, level) {\n  return function () {\n    var args = new Array(1 + arguments.length);\n    args[0] = bindings;\n\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1];\n    }\n\n    return parent[level].apply(this, args);\n  };\n}\n\nfunction transmit(logger, opts, args) {\n  var send = opts.send;\n  var ts = opts.ts;\n  var methodLevel = opts.methodLevel;\n  var methodValue = opts.methodValue;\n  var val = opts.val;\n  var bindings = logger._logEvent.bindings;\n  applySerializers(args, logger._serialize || Object.keys(logger.serializers), logger.serializers, logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize);\n  logger._logEvent.ts = ts;\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1;\n  });\n  logger._logEvent.level.label = methodLevel;\n  logger._logEvent.level.value = methodValue;\n  send(methodLevel, logger._logEvent, val);\n  logger._logEvent = createLogEventShape(bindings);\n}\n\nfunction createLogEventShape(bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: {\n      label: '',\n      value: 0\n    }\n  };\n}\n\nfunction asErrValue(err) {\n  var obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  };\n\n  for (var key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction getTimeFunction(opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp;\n  }\n\n  if (opts.timestamp === false) {\n    return nullTime;\n  }\n\n  return epochTime;\n}\n\nfunction mock() {\n  return {};\n}\n\nfunction passthrough(a) {\n  return a;\n}\n\nfunction noop() {}\n\nfunction nullTime() {\n  return false;\n}\n\nfunction epochTime() {\n  return Date.now();\n}\n\nfunction unixTime() {\n  return Math.round(Date.now() / 1000.0);\n}\n\nfunction isoTime() {\n  return new Date(Date.now()).toISOString();\n} // using Date.now() for testability\n\n/* eslint-disable */\n\n/* istanbul ignore next */\n\n\nfunction pfGlobalThisOrFallback() {\n  function defd(o) {\n    return typeof o !== 'undefined' && o;\n  }\n\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis;\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function get() {\n        delete Object.prototype.globalThis;\n        return this.globalThis = this;\n      },\n      configurable: true\n    });\n    return globalThis;\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {};\n  }\n}\n/* eslint-enable */","map":{"version":3,"sources":["/Users/sherydubey/spe_major_project/frontend/node_modules/pino/browser.js"],"names":["format","require","module","exports","pino","_console","pfGlobalThisOrFallback","console","stdSerializers","mapHttpRequest","mock","mapHttpResponse","wrapRequestSerializer","passthrough","wrapResponseSerializer","wrapErrorSerializer","req","res","err","asErrValue","shouldSerialize","serialize","serializers","Array","isArray","hasToFilter","filter","k","Object","keys","opts","browser","transmit","send","Error","proto","write","asObject","stdErrSerialize","indexOf","levels","error","fatal","warn","info","debug","trace","enabled","level","logger","create","log","noop","defineProperty","get","getLevelVal","getLevel","set","setLevel","setOpts","timestamp","getTimeFunction","setMaxListeners","getMaxListeners","emit","addListener","on","prependListener","once","prependOnceListener","removeListener","removeAllListeners","listeners","listenerCount","eventNames","flush","_serialize","_stdErrSerialize","child","_logEvent","createLogEventShape","Infinity","values","_level","bindings","bindingsSerializers","childSerializers","assign","childSerialize","applySerializers","Child","parent","_childLevel","bind","concat","prototype","labels","stdTimeFunctions","nullTime","epochTime","unixTime","isoTime","fallback","getPrototypeOf","levelVal","wrap","LOG","ts","args","arguments","length","i","call","apply","transmitLevel","transmitValue","methodValue","methodLevel","val","argsCloned","slice","msg","o","time","lvl","shift","undefined","messages","arg","label","value","obj","type","constructor","name","message","stack","key","a","Date","now","Math","round","toISOString","defd","globalThis","configurable","e","self","window"],"mappings":"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","sourcesContent":["'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace']\n\n  if (typeof proto === 'function') {\n    proto.error = proto.fatal = proto.warn =\n    proto.info = proto.debug = proto.trace = proto\n  }\n  if (opts.enabled === false) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = pino.levels\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return this.level === 'silent'\n      ? Infinity\n      : this.levels.values[this.level]\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(setOpts, logger, 'error', 'log') // <-- must stay first\n    set(setOpts, logger, 'fatal', 'error')\n    set(setOpts, logger, 'warn', 'error')\n    set(setOpts, logger, 'info', 'log')\n    set(setOpts, logger, 'debug', 'log')\n    set(setOpts, logger, 'trace', 'log')\n  }\n\n  function child (bindings) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    const bindingsSerializers = bindings.serializers\n    if (serialize && bindingsSerializers) {\n      var childSerializers = Object.assign({}, serializers, bindingsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n      this.error = bind(parent, bindings, 'error')\n      this.fatal = bind(parent, bindings, 'fatal')\n      this.warn = bind(parent, bindings, 'warn')\n      this.info = bind(parent, bindings, 'info')\n      this.debug = bind(parent, bindings, 'debug')\n      this.trace = bind(parent, bindings, 'trace')\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    return new Child(this)\n  }\n  return logger\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction set (opts, logger, level, fallback) {\n  const proto = Object.getPrototypeOf(logger)\n  logger[level] = logger.levelVal > logger.levels.values[level]\n    ? noop\n    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))\n\n  wrap(opts, logger, level)\n}\n\nfunction wrap (opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return\n\n  logger[level] = (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\n      else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || logger.level\n        const transmitValue = pino.levels.values[transmitLevel]\n        const methodValue = pino.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: pino.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args)\n      }\n    }\n  })(logger[level])\n}\n\nfunction asObject (logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const o = {}\n  if (ts) {\n    o.time = ts\n  }\n  o.level = pino.levels.values[level]\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) o.msg = msg\n  return o\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction bind (parent, bindings, level) {\n  return function () {\n    const args = new Array(1 + arguments.length)\n    args[0] = bindings\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1]\n    }\n    return parent[level].apply(this, args)\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n"]},"metadata":{},"sourceType":"script"}